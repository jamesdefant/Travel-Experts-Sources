   DBHelper helper = new DBHelper();

    ObservableList<Packages> packages;








    @FXML
        void onActionBtnSave(ActionEvent event) throws SQLException {
            disableOptions(); //after all is saved, disable the buttons.
            Connection conn = helper.createConnection();
            String sql = "UPDATE `Packages` SET `PackagesId`=?,  `AgtFirstName`=?, `AgtMiddleInitial`=?, `AgtLastName`=?, `AgtBusPhone`=?, `AgtEmail`=?, `AgtPosition`=?, `AgencyId`=?   WHERE `PackagesId`=?";
            PreparedStatement stmt = conn.prepareStatement(sql);

            //below, the code will save the values.
            stmt.setInt(1, Integer.parseInt(tfPackagesId.getText()));
            stmt.setString(2, (tfAgtFirstName.getText()));
            stmt.setString(3, (tfAgtMiddleInitial.getText()));
            stmt.setString(4, (tfAgtLastName.getText()));
            stmt.setString(5, (tfPackagesPhone.getText()));
            stmt.setString(6, (tfAgtEmail.getText()));
            stmt.setString(7, (tfAgtPosition.getText()));
            stmt.setInt(8, Integer.parseInt(tfAgencyId.getText()));
            stmt.setInt(9, Integer.parseInt(tfPackagesId.getText()));
            int rows = stmt.executeUpdate();
            conn.close();
            if (rows == 0)
            {
                Alert alert = new Alert(Alert.AlertType.ERROR, "Update failed, contact Alex, our best tech support person!", ButtonType.OK);
                alert.show();
            }
            else
            {
                Alert alert = new Alert(Alert.AlertType.INFORMATION, "Update successful", ButtonType.OK);
                alert.show();
                loadCombo();
            }

        }

        @FXML
        void initialize() throws SQLException {
            assert cbPackagess != null : "fx:id=\"cbPackagess\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfPackagesId != null : "fx:id=\"tfPackagesId\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfAgtFirstName != null : "fx:id=\"tfAgtFirstName\" was not injected: check your FXML file 'sample.fxml'.";
            assert btnSave != null : "fx:id=\"btnSave\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfAgtMiddleInitial != null : "fx:id=\"tfAgtMiddleInitial\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfAgtLastName != null : "fx:id=\"tfAgtLastName\" was not injected: check your FXML file 'sample.fxml'.";
            assert btnEdit != null : "fx:id=\"btnEdit\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfAgtEmail != null : "fx:id=\"tfAgtEmail\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfPackagesPhone != null : "fx:id=\"tfPackagesPhone\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfAgtPosition != null : "fx:id=\"tfAgtPosition\" was not injected: check your FXML file 'sample.fxml'.";
            assert tfAgencyId != null : "fx:id=\"tfAgencyId\" was not injected: check your FXML file 'sample.fxml'.";
            loadCombo();

            //Combo is loaded, detect selection and load selected Packages details into textfields

            cbPackagess.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<Packages>() {
                @Override
                public void changed(ObservableValue<? extends Packages> observable, Packages oldValue, Packages newValue) {
                    if (newValue != null) {
                        // tfProductId.setText(newValue.getPackagesId() + "");
                        tfPackagesId.setText(newValue.getPackagesId().toString());
                        tfAgtFirstName.setText(newValue.getAgtFirstName());
                        tfAgtMiddleInitial.setText(newValue.getAgtMiddleInitial());
                        tfAgtLastName.setText(newValue.getAgtLastName());
                        tfPackagesPhone.setText(newValue.getAgtBusPhone());
                        tfAgtEmail.setText(newValue.getAgtEmail());
                        tfAgtPosition.setText(newValue.getAgtPosition());
                        tfAgencyId.setText(newValue.getAgencyId().toString());
                    }
                }
            });
        }

        //function below will load the values
        private void loadCombo() throws SQLException {
            Connection conn = DBhelper.createConnection();
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("select PackagesId,AgtFirstName,AgtMiddleInitial,AgtLastName, AgtBusPhone, AgtEmail, AgtPosition, AgencyId from Packagess");
            ArrayList<Packages> agtArrayList = new ArrayList<>();
            while (rs.next())
            {
                agtArrayList.add(new Packages(rs.getInt(1),
                        rs.getString(2),
                        rs.getString(3),
                        rs.getString(4),
                        rs.getString(5),
                        rs.getString(6),
                        rs.getString(7),
                        rs.getInt(8)))

                ;}



            packagesses = FXCollections.observableArrayList(agtArrayList);
            cbPackagess.setItems(packagesses);
            conn.close();
        }
        private void disableOptions(){
            //disable editing
            btnSave.setDisable(true);
            btnEdit.setDisable(false);
            tfPackagesId.setDisable(true);
            tfAgtFirstName.setDisable(true);
            tfAgtMiddleInitial.setDisable(true);
            tfAgtLastName.setDisable(true);
            tfPackagesPhone.setDisable(true);
            tfAgtEmail.setDisable(true);
            tfAgtPosition.setDisable(true);

        }


        private void enableOptions(){
            //enable editing
            btnSave.setDisable(false);
            btnEdit.setDisable(true);
            tfAgtFirstName.setDisable(false);
            tfAgtMiddleInitial.setDisable(false);
            tfAgtLastName.setDisable(false);
            tfPackagesPhone.setDisable(false);
            tfAgtEmail.setDisable(false);
            tfAgtPosition.setDisable(false);